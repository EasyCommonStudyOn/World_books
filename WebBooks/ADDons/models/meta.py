"""
class Meta - це вбудований клас в моделях Django, який використовується для задання додаткових метаданих для моделі. Використовуючи class Meta, ви можете налаштувати різні атрибути та параметри, що впливають на поведінку моделі і таблиці бази даних, створеної на основі цієї моделі. Основні атрибути, які можна визначити в class Meta, включають:
"""
from django.db import models


class MyModel(models.Model):
    # Поля моделі

    class Meta:
        db_table = 'custom_table_name'
        """
        db_table: Цей атрибут дозволяє задати назву таблиці в базі даних, яка буде використовуватися для збереження об'єктів даної моделі. Зазвичай ім'я таблиці автоматично формується за замовчуванням, використовуючи ім'я моделі, але ви можете визначити свою назву таблиці за допомогою цього атрибуту.
        """

        ordering = ['field1', '-field2']
        """
        ordering: Цей атрибут дозволяє визначити порядок сортування записів моделі в запитах до бази даних. Ви можете вказати одне або кілька полів моделі та спосіб сортування (за зростанням або спаданням).
        """

        verbose_name = 'Моя модель'
        verbose_name_plural = 'Мої моделі'
        """
        verbose_name та verbose_name_plural: Ці атрибути використовуються для задання змістовних назв моделі та її множини. Це використовується для відображення людям зрозумілих назв моделі в адміністративному інтерфейсі Django.
        """

        unique_together = ('field1', 'field2')
        """
        unique_together і unique_together: Ці атрибути дозволяють визначити комбінації полів моделі, які повинні бути унікальними разом. Наприклад, ви можете вказати, що комбінація значень двох полів має бути унікальною в межах таблиці бази даних.
        """
