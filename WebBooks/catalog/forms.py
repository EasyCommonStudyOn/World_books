"""
<form action="/team_name_url/" method="post">
<label for="team_name">Bвeдитe имя</lаЬеl>
<input id="team_name" type="text" name="name_field"
vаluе="Имя по умолчанию">
<input type="suЬmit" value="OK">
</form>
Здесь у нас только одно поле для ввода имени, но форма может иметь любое количество
элементов ввода и связанных с ними текстовых меток. Атрибут элемента type определяет,
виджет какого типа будет показан в той или иной строке. Атрибуты name и id
служат для однозначной идентификации поля в коде JavaScript, CSS и НТМL, в то время
как value содержит значение поля, когда оно показывается в первый раз. Текстовая
метка добавляется при помощи тега label ( строка с текстом Введите имя в листинге
11.24) и имеет атрибут for со з􀁞ачением идентификатора id того поля, с которым
связана эта текстовая метка.
Элемент input типа type="suЬmit" будет по умолчанию показан как кнопка ОК, нажав на
которую пользователь отправляет введенные им данные на сервер (в нашем случае -
только значение поля с идентификатором team name ). Атрибуты формы action и method
определяют, каким методом будут отправлены данные на сервер (атрибут methoct) и куда
(атрибут action).
Рассмотрим более подробно два последних элемента:
□ action - это ресурс (URL-aдpec), куда будут отправлены данные для обработки.
Если значение не установлено (т. е. значением поля является пустая строка), тогда
данные будут отправлены в представление view ( функцию или класс), которое сформировало
текущую страницу;
□ method- определяет метод отправки данных (POST или GET):
• метод POST должен использоваться тогда, когда необходимо внести изменения
в базу данных на сервере. Применение этого метода должно повысить уровень
защиты от межсайтовой подделки запроса (CSRF);
• метод GET предназначен только для форм, действия с которыми не приводят
к изменению базы данных (например, для поисковых запросов). Кроме того, этот
метод рекомендуется применять для создания внешних ссылок на ресурсы сайта.


"""

from django import forms
from datetime import date


# Форма для добавления в БД новых авторов
class AuthorForm(forms.Form):
    first_name = forms.CharField(label="Имя автора") #будет генерировать на НТМLстранице текстовое поле input type="text";
    last_name = forms.CharField(label="Фамилия автора")
    date_of_birth = forms.DateField(
        label="Дата рождения",
        initial=date.today(),
        widget=forms.DateInput(attrs={'type': 'date'})
    )
    about = forms.CharField(
        label="Сведения об авторе",
        widget=forms.Textarea
    )
    photo = forms.ImageField(label="Фото автора")
